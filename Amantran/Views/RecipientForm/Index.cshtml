@* @model Amantran.Models.Recipient

@{
    ViewData["Title"] = "Recipient Form";
}

<h2>Recipient Form</h2>

@using (Html.BeginForm("Index", "RecipientForm", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal recipient-form">
        <h4>Recipient Details</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="section contact-section">
            <h4>Information</h4>
            <div class="row form-row">
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="row form-row">
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownListFor(model => model.Gender, new SelectList(new List<SelectListItem>
                {
                new SelectListItem { Value = "Male", Text = "Male" },
                new SelectListItem { Value = "Female", Text = "Female" }
                }, "Value", "Text"), "Select Gender", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.RelationshipStatus, htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownListFor(model => model.RelationshipStatus, new SelectList(new List<SelectListItem>
                {
                new SelectListItem { Value = "Married", Text = "Married" },
                new SelectListItem { Value = "Unmarried", Text = "Unmarried" },
                new SelectListItem { Value = "Separated", Text = "Separated" },
                new SelectListItem { Value = "Widow", Text = "Widow" },
                new SelectListItem { Value = "Widower", Text = "Widower" },
                new SelectListItem { Value = "None", Text = "None" }
                }, "Value", "Text"), "Select Relationship Status", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.RelationshipStatus, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row form-row">
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.KnownAs, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.KnownAs, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.KnownAs, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="section contact-section">
            <h4>Contact</h4>
            <div class="row form-row">
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.VillageId, htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownListFor(model => model.VillageId, new SelectList(ViewBag.Villages, "VillageId", "VillageName"), "Select Village", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.VillageId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Community, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Community, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Community, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="row form-row">
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.WhatsappNumber, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.WhatsappNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.WhatsappNumber, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.CountryCode, htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownListFor(model => model.CountryCode, new SelectList(new List<SelectListItem>
                    {
                    new SelectListItem { Value = "+91", Text = "+91" },
                    new SelectListItem { Value = "+1", Text = "+1" }
                    // Add more country codes as needed
                    }, "Value", "Text"), "Select Country Code", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CountryCode, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="section education-section">
            <h4>Education</h4>
            <div class="row form-row">
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Education, htmlAttributes: new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.Education, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Education, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.Title, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.EducationCategory, htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownListFor(model => model.EducationCategory, new SelectList(new List<SelectListItem>
                    {
                    new SelectListItem { Value = "HSC", Text = "HSC" },
                    new SelectListItem { Value = "SSC", Text = "SSC" },
                    new SelectListItem { Value = "Bachelors", Text = "Bachelors" },
                    new SelectListItem { Value = "Masters", Text = "Masters" }
                    // Add more categories as needed
                    }, "Value", "Text"), "Select Education Category", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.EducationCategory, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="section family-id-details-section">
            <h4>Family ID Details</h4>
            <div class="row form-row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.DataCollectionId, htmlAttributes: new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.DataCollectionId, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.DataCollectionId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.FamilyTreeId, htmlAttributes: new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.FamilyTreeId, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.FamilyTreeId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label" })
                @Html.TextAreaFor(model => model.Notes, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group text-center">
            <input type="submit" value="Submit" class="btn btn-primary" />
        </div>
    </div>
}

@section Styles {
    <style type="text/css">
        .recipient-form {
            background-color: #f9f9f9;
            padding: 20px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }

            .recipient-form .form-group {
                margin-bottom: 15px;
            }

            .recipient-form .control-label {
                font-weight: bold;
            }

            .recipient-form .form-control {
                border-radius: 4px;
            }

            .recipient-form .btn-primary {
                background-color: #007bff;
                border-color: #007bff;
                color: #fff;
            }

        .form-row {
            margin-bottom: 15px;
        }
    </style>
}
 *@